#!/usr/bin/env node
import{Command as n}from"commander";import{resolve as r,join as e}from"path";import t from"simple-git";import{copy as o,writeFile as i}from"fs-extra";var c=new n,a=require("child_process").spawn,s={pro:function(n){try{var c=r(n),s=e(__dirname,"../templates/root-project"),u=function(r,u){try{var p=Promise.resolve(o(s,c)).then(function(){var r=function(n){try{return require(e(n,"package.json"))}catch(n){return{}}}(c);return r.name=n,Promise.resolve(i(e(c,"package.json"),JSON.stringify(r,void 0,2))).then(function(){return Promise.resolve(t().cwd(c).init()).then(function(){a("npx",["lerna","bootstrap"],{stdio:"inherit",cwd:c}).on("close",function(){})})})})}catch(n){return u(n)}return p&&p.then?p.then(void 0,u):p}(0,function(n){console.log(n)});return Promise.resolve(u&&u.then?u.then(function(){}):void 0)}catch(n){return Promise.reject(n)}},pack:function(n){try{var t=require("child_process").spawn,c="@"+(function(){var n;try{n=require(r("package.json"))}catch(r){n={}}return n}().name||"unknown")+"/"+n,a=e(__dirname,"../templates/package"),s=r("packages/"+n),u=function(n,r){try{var u=Promise.resolve(o(a,s)).then(function(){var n=e(s,"package.json"),r=require(n),o=t("npx",["lerna","bootstrap"],{stdio:"inherit"});return r.name=c,Promise.resolve(i(n,JSON.stringify(r,void 0,2))).then(function(){o.on("close",function(){})})})}catch(n){return r(n)}return u&&u.then?u.then(void 0,r):u}(0,function(n){console.log(n)});return Promise.resolve(u&&u.then?u.then(function(){}):void 0)}catch(n){return Promise.reject(n)}}};!function(n){n.command("g <type> [name]").description("创建文件").action(function(n,r){if(void 0===r&&(r="unknown"),!(n in s)||"function"!=typeof s[n])throw new TypeError("搞出问题了！没有对应模式!!");s[n](r)})}(c),c.parse(process.argv);
//# sourceMappingURL=index.module.js.map
